import React from 'react';
import { createRoot } from 'react-dom/client';
import ServiceCards from './components/services/ServiceCards';

// –§—É–Ω–∫—Ü–∏—è –¥–ª—è –æ—Ç–ª–∞–¥–∫–∏ React-–ø—Ä–∏–ª–æ–∂–µ–Ω–∏—è
const debugReactApp = () => {
    console.log('üöÄ React-–ø—Ä–∏–ª–æ–∂–µ–Ω–∏–µ –∏–Ω–∏—Ü–∏–∞–ª–∏–∑–∏—Ä—É–µ—Ç—Å—è...');
    
    // –ü—Ä–æ–≤–µ—Ä—è–µ–º, –∑–∞–≥—Ä—É–∑–∏–ª–∏—Å—å –ª–∏ –≤—Å–µ –Ω–µ–æ–±—Ö–æ–¥–∏–º—ã–µ –∫–æ–º–ø–æ–Ω–µ–Ω—Ç—ã
    console.log('‚úì React –∑–∞–≥—Ä—É–∂–µ–Ω:', typeof React !== 'undefined');
    console.log('‚úì ReactDOM –∑–∞–≥—Ä—É–∂–µ–Ω:', typeof createRoot !== 'undefined');
    console.log('‚úì ServiceCards –∑–∞–≥—Ä—É–∂–µ–Ω:', typeof ServiceCards !== 'undefined');
    
    // –ù–∞—Ö–æ–¥–∏–º –∫–æ–Ω—Ç–µ–π–Ω–µ—Ä –¥–ª—è React –∫–æ–º–ø–æ–Ω–µ–Ω—Ç–æ–≤
    const serviceCardsContainer = document.getElementById('react-service-cards');
    console.log('‚úì –ö–æ–Ω—Ç–µ–π–Ω–µ—Ä –Ω–∞–π–¥–µ–Ω:', serviceCardsContainer !== null);
    
    if (!serviceCardsContainer) {
        console.error('‚ùå –ö–æ–Ω—Ç–µ–π–Ω–µ—Ä #react-service-cards –Ω–µ –Ω–∞–π–¥–µ–Ω –Ω–∞ —Å—Ç—Ä–∞–Ω–∏—Ü–µ!');
        return;
    }
    
    // –ü–æ–ª—É—á–∞–µ–º –¥–∞–Ω–Ω—ã–µ –∏–∑ –∞—Ç—Ä–∏–±—É—Ç–æ–≤ data-*
    let servicesData = [];
    try {
        const dataAttribute = serviceCardsContainer.getAttribute('data-services');
        console.log('‚úì –ê—Ç—Ä–∏–±—É—Ç data-services:', dataAttribute ? '–Ω–∞–π–¥–µ–Ω' : '–Ω–µ –Ω–∞–π–¥–µ–Ω');
        
        if (dataAttribute) {
            servicesData = JSON.parse(dataAttribute);
            console.log('‚úì –î–∞–Ω–Ω—ã–µ —É—Å–ª—É–≥ —É—Å–ø–µ—à–Ω–æ —Ä–∞—Å–ø–∞—Ä—Å–µ–Ω—ã:', servicesData.length, '—É—Å–ª—É–≥');
        } else {
            console.warn('‚ö†Ô∏è –ê—Ç—Ä–∏–±—É—Ç data-services –ø—É—Å—Ç –∏–ª–∏ –æ—Ç—Å—É—Ç—Å—Ç–≤—É–µ—Ç');
        }
    } catch (parseError) {
        console.error('‚ùå –û—à–∏–±–∫–∞ –ø—Ä–∏ –ø–∞—Ä—Å–∏–Ω–≥–µ –¥–∞–Ω–Ω—ã—Ö —É—Å–ª—É–≥:', parseError);
    }
    
    try {
        console.log('üîÑ –†–µ–Ω–¥–µ—Ä–∏–Ω–≥ React –∫–æ–º–ø–æ–Ω–µ–Ω—Ç–∞...');
        
        // –†–µ–Ω–¥–µ—Ä–∏–º React –∫–æ–º–ø–æ–Ω–µ–Ω—Ç –≤ –∫–æ–Ω—Ç–µ–π–Ω–µ—Ä
        const root = createRoot(serviceCardsContainer);
        root.render(
            <React.StrictMode>
                <div className="react-debug-info" style={{ display: 'none' }}>
                    React —É—Å–ø–µ—à–Ω–æ –∑–∞–ø—É—â–µ–Ω!
                </div>
                <ServiceCards services={servicesData} />
            </React.StrictMode>
        );
        
        console.log('‚úÖ React –∫–æ–º–ø–æ–Ω–µ–Ω—Ç ServiceCards —É—Å–ø–µ—à–Ω–æ –æ—Ç—Ä–µ–Ω–¥–µ—Ä–µ–Ω!');
    } catch (renderError) {
        console.error('‚ùå –û—à–∏–±–∫–∞ –ø—Ä–∏ —Ä–µ–Ω–¥–µ—Ä–∏–Ω–≥–µ React –∫–æ–º–ø–æ–Ω–µ–Ω—Ç–∞:', renderError);
        
        // –í —Å–ª—É—á–∞–µ –æ—à–∏–±–∫–∏ –ø–æ–∫–∞–∑—ã–≤–∞–µ–º —Å–æ–æ–±—â–µ–Ω–∏–µ –≤ –∫–æ–Ω—Ç–µ–π–Ω–µ—Ä–µ
        serviceCardsContainer.innerHTML = `
            <div class="alert alert-danger">
                <h4>–ü—Ä–æ–∏–∑–æ—à–ª–∞ –æ—à–∏–±–∫–∞ –ø—Ä–∏ –∑–∞–≥—Ä—É–∑–∫–µ –∫–æ–º–ø–æ–Ω–µ–Ω—Ç–æ–≤</h4>
                <p>${renderError.message}</p>
                <p>–ü–æ–∂–∞–ª—É–π—Å—Ç–∞, –æ–±–Ω–æ–≤–∏—Ç–µ —Å—Ç—Ä–∞–Ω–∏—Ü—É –∏–ª–∏ —Å–≤—è–∂–∏—Ç–µ—Å—å —Å –∞–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–æ—Ä–æ–º.</p>
            </div>
        `;
    }
};

// –ò–Ω–∏—Ü–∏–∞–ª–∏–∑–∏—Ä—É–µ–º React –ø—Ä–∏–ª–æ–∂–µ–Ω–∏–µ –ø—Ä–∏ –∑–∞–≥—Ä—É–∑–∫–µ DOM
document.addEventListener('DOMContentLoaded', debugReactApp);

// –¢–∞–∫–∂–µ –ø—Ä–æ–±—É–µ–º –∏–Ω–∏—Ü–∏–∞–ª–∏–∑–∏—Ä–æ–≤–∞—Ç—å —á–µ—Ä–µ–∑ setTimeout –¥–ª—è —Å–ª—É—á–∞–µ–≤, –∫–æ–≥–¥–∞ DOMContentLoaded —É–∂–µ –ø—Ä–æ–∏–∑–æ—à–µ–ª
setTimeout(debugReactApp, 1000); 